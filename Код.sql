--Create Database Комплектующие_к_станкам
--Use Комплектующие_к_станкам

/*
Create Table Типы_станков
(
	Тип_станка_ID int identity(1,1) Primary Key,
	Тип varchar(30) not null
)

Create Table Склады
(
	Склад_ID int identity(1,1) Primary Key,
	Номер_склада int not null,
	Адрес varchar(30) not null,
	Площадь int not null Check(Площадь > 0)
)

Create Table Ремонтники
(
	Ремонтник_ID int identity(1,1) Primary Key,
	Фамилия varchar(30) not null,
	Имя varchar(30) not null,
	Отчество varchar(30) not null,
	Разряд int not null Check(Разряд > 0 And Разряд <=5),
	Дата_рождения date not null Check(Дата_рождения < GETDATE()),
	Зарплата money not null Check(Зарплата >= 12130), --Зарплата не меньше МРОТ
	Телефон varchar(12) not null Check(Substring(Телефон, 1, 1) = '8' Or Substring(Телефон, 1, 1) = '7' Or Substring(Телефон, 1, 2) = '+7') --Форматы 8XXXXXXXXXX, 7XXXXXXXXXX, +7XXXXXXXXXX
)

Create Table Детали
(
	Деталь_ID int identity(1,1) Primary Key,
	Склад_ID int Foreign Key References Склады(Склад_ID) not null,
	Ремонтник_ID int Foreign Key References Ремонтники(Ремонтник_ID) not null,
	Артикул varchar(6) not null,
	Название varchar(100) not null,
	Дата_получения date not null,
	Цена money not null,
	Произведено_деталей int not null Check(Произведено_деталей > 0),
	Деталей_на_складе int not null Check(Деталей_на_складе > 0 And Деталей_на_складе <= Произведено_деталей)
)

Create Table Станки
(
	Станок_ID int identity(1,1) Primary Key,
	Тип_станка_ID int Foreign Key References Типы_станков(Тип_станка_ID) not null,
	Название varchar(100) not null,
	Дата_начала_работы date not null,
	Эксплуатационный_срок int not null,
	Дата_списания date Default GETDATE() --Установка значения по умолчанию, чтобы при несрабатывании триггера поле было заполнено в любом случае
)

Create Table Списки_деталей
(
	Список_деталей_ID int identity(1,1) Primary Key,
	Станок_ID int Foreign Key References Станки(Станок_ID) not null,
	Деталь_ID int Foreign Key References Детали(Деталь_ID) not null,
	Количество_на_станке int not null
)
*/

/*
--Триггер считает дату списания, т.е. к дате начала работы прибавляет эксплуатационный срок
Create Trigger Подсчет_даты_списания
	On  Станки
	After Insert
As 
	Set Nocount On;
	Update Станки Set Дата_списания = DATEADD(day, Эксплуатационный_срок, Дата_начала_работы) From Станки
*/

/*
Create Trigger Вычет_деталей_со_склада_при_изменении
	On  Списки_деталей
	After Update
As 
	Set Nocount On;
	Update Детали Set Деталей_на_складе = Произведено_деталей - Количество_на_станке From Списки_деталей Where Списки_деталей.Деталь_ID = Детали.Деталь_ID
*/

/*
Create Trigger Вычет_деталей_со_склада_при_добавлении
	On  Списки_деталей
	After Insert
As 
	Set Nocount On;
	Update Детали Set Деталей_на_складе = Произведено_деталей - Количество_на_станке From inserted Where Inserted.Деталь_ID = Детали.Деталь_ID
*/

/*---------------
Создание запросов
---------------*/

/*--------------
Из одной таблицы
--------------*/

--Select Артикул, Название, Дата_получения, Цена, Произведено_деталей, Деталей_на_складе From Детали
--Select Артикул, Название, Произведено_деталей - Деталей_на_складе As Деталей_на_станке From Детали
--Select Артикул, Название, Цена * Произведено_деталей As Общая_стоимость_деталей From Детали
--Select Название, Дата_списания From Станки Where Дата_списания < GETDATE()
--Select Фамилия, Имя, Отчество, Разряд, Дата_рождения, Зарплата, Телефон From Ремонтники Where Зарплата > 30000 And Зарплата < 45000

/*------------------
Из нескольких таблиц
------------------*/

--1) Выборка количества деталей на каждом станке + его тип
/*
Select Название, Дата_начала_работы, Эксплуатационный_срок, Дата_списания, Тип, Количество_на_станке As Количество_деталей_на_станке From Станки 
Join Типы_станков On Станки.Тип_станка_ID = Типы_станков.Тип_станка_ID
Join Списки_деталей On Станки.Станок_ID = Списки_деталей.Станок_ID
*/

--2) Выборка ремонтников, производивших детали для станка, которые (детали) входят в его состав
/*
Select Фамилия, Имя, Отчество, Артикул, Детали.Название As Название_детали, Станки.Название As Название_станка From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Ремонтник_ID
Join Списки_деталей On Детали.Деталь_ID = Списки_деталей.Деталь_ID
Join Станки On Списки_деталей.Станок_ID = Станки.Станок_ID
*/

--3) Выборка деталей, находящихся на складе, произведенных ремонтником
/*
Select Артикул, Название, Деталей_на_складе, Номер_склада, Адрес, Фамилия, Имя, Отчество, Телефон From Детали
Join Склады On Детали.Склад_ID = Склады.Склад_ID
Join Ремонтники On Детали.Ремонтник_ID = Ремонтники.Ремонтник_ID
*/

--4) Выборка местоположения деталей (на станке/на складе)
/*
Select Артикул, Название, Произведено_деталей, Деталей_на_складе, Количество_на_станке, Номер_склада, Адрес From Детали
Join Списки_деталей On Детали.Деталь_ID = Списки_деталей.Деталь_ID
Join Склады On Детали.Склад_ID = Склады.Склад_ID
*/

--5) Выборка ремонтиков, ответственных за определенные типы станков
/*
Select Фамилия, Имя, Отчество, Тип As Тип_станка From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Ремонтник_ID
Join Списки_деталей On Детали.Деталь_ID = Списки_деталей.Деталь_ID
Join Станки On Списки_деталей.Станок_ID = Станки.Станок_ID
Join Типы_станков On Станки.Тип_станка_ID = Типы_станков.Тип_станка_ID
*/

/*-------------------------------------------------
Со сложным логическим условием из нескольких таблиц
-------------------------------------------------*/

--1) Выборка ремонтников 3+ разряда и произведенных ими деталей
/*
Select Фамилия, Имя, Отчество, Разряд, Телефон, Артикул, Название, Дата_получения, Цена, Произведено_деталей From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Ремонтник_ID
Where Разряд >= 3
*/

--2) Выборка самых больших складов с самым большим количеством деталей
/*
Select Номер_склада, Адрес, Площадь, Артикул, Название, Деталей_на_складе From Склады
Join Детали On Склады.Склад_ID = Детали.Склад_ID
Where Площадь >= 40 And Деталей_на_складе >= 10
*/

--3) Самые продуктивные работники
/*
Select Фамилия, Имя, Отчество, Разряд, Дата_рождения, Зарплата, Телефон, Артикул, Название, Произведено_деталей From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Ремонтник_ID
Where Произведено_деталей >= 10
*/

--4) Выборка количества деталей на списанных станках
/*
Select Название, Дата_списания, Количество_на_станке As Количество_деталей_на_станке From Станки
Join Списки_деталей On Станки.Станок_ID = Списки_деталей.Станок_ID
Where Дата_списания < GETDATE()
*/

--5) Самые "старые" и непродуктивные работники
/*
Select Фамилия, Имя, Отчество, Разряд, Дата_рождения, Зарплата, Телефон, Артикул, Название, Произведено_деталей From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Ремонтник_ID
Where Дата_рождения < '1990-01-01' And Произведено_деталей <= 15
*/

/*------------------------------
Группировка из нескольких таблиц
------------------------------*/

--1) Общая стоимость деталей на станке
/*
Select Станки.Название, Sum(Количество_на_станке) As Деталей_на_станке, Sum(Цена) As Цена From Станки
Join Списки_деталей On Станки.Станок_ID = Списки_деталей.Станок_ID
Join Детали On Списки_деталей.Деталь_ID = Детали.Деталь_ID
Group By Станки.Название
*/

--2) Количество деталей на станках одного типа
/*
Select Тип, Sum(Количество_на_станке) As Количество_деталей_на_станке, Count(*) As Количество_видов_деталей_на_станках From Станки
Join Типы_станков On Станки.Тип_станка_ID = Типы_станков.Тип_станка_ID
Join Списки_деталей On Станки.Станок_ID = Списки_деталей.Станок_ID
Group By Тип
*/

--3) Общая сумма произведенных деталей каждым ремонтником
/*
Select Фамилия, Имя, Отчество, Sum(Произведено_деталей) As Всего_произведено_деталей From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Ремонтник_ID
Group By Фамилия, Имя, Отчество
*/

--4) Количество видов деталей, производимых ремонтником, больше одного вида
/*
Select Фамилия, Count(*) As Виды_деталей From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Ремонтник_ID
Group By Фамилия
Having Count(*) > 1
*/

--5) Количество видов деталей, находящихся на складах
/*
Select Номер_склада, Count(*) As Количество_видов_деталей From Детали
Join Склады On Детали.Склад_ID = Склады.Склад_ID
Group By Номер_склада
*/

/*--------------
Оператор Between
--------------*/

--1) Выборка ремонтников, которые произвели от 10 до 20 деталей
/*
Select Фамилия, Имя, Отчество, Произведено_деталей From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Ремонтник_ID
Where Произведено_деталей Between 10 And 20
*/

--2) Выборка станков с их типов, эксплуатационный срок который от 1 до 2 лет
/*
Select Название, Тип, Эксплуатационный_срок From Станки
Join Типы_станков On Станки.Тип_станка_ID = Типы_станков.Тип_станка_ID
Where Эксплуатационный_срок Between 365 And 730
*/

--3) Выборка станков, на которых количество установленных деталей от 0 до 5
/*
Select Название, Количество_на_станке As Количество_деталей_на_станке From Станки
Join Списки_деталей On Станки.Станок_ID = Списки_деталей.Станок_ID
Where Количество_на_станке Between 0 And 5
*/

/*-----------
Оператор Like
-----------*/

--1) Выборка ремонтников 1984 года рождения
/*
Select * From Ремонтники
Where Дата_рождения Like '1984%'
Order By Фамилия
*/

--2) Выборка сверлильных, расточных и сверлильно-расточных станков
/*
Select Название, Тип From Станки
Join Типы_станков On Станки.Тип_станка_ID = Типы_станков.Тип_станка_ID
Where Тип Like 'Сверлильн%' Or Тип Like '%расточн%'
*/

--3) Выборка складов из района 1XX с общим количеством деталей на них
/*
Select Номер_склада, Адрес, Sum(Деталей_на_складе) As Всего_деталей_на_складе From Склады
Join Детали On Склады.Склад_ID = Детали.Склад_ID
Where Номер_склада Like '2%'
Group By Номер_склада, Адрес
Order By Номер_склада
*/

/*---------
Оператор In
---------*/

--1) Выборка сверлильных и сверлильно расточных станков
/*
Select Название, Тип From Станки
Join Типы_станков On Станки.Тип_станка_ID = Типы_станков.Тип_станка_ID
Where Тип In ('Сверлильный', 'Сверлильно-расточный')
*/

--2) Выборка станков с эксплуатационным сроком 1 и 2 года с его деталями
/*
Select Станки.Название, Дата_начала_работы, Эксплуатационный_срок, Дата_списания, Артикул, Детали.Название, Дата_получения From Станки
Join Списки_деталей On Станки.Станок_ID = Списки_деталей.Станок_ID
Join Детали On Списки_деталей.Деталь_ID = Детали.Деталь_ID
Where Эксплуатационный_срок In (365, 730)
*/

--3) Выборка ремонтников 3-5 разряда и произведенные ими деталями
/*
Select Фамилия, Имя, Отчество, Разряд, Телефон, Артикул, Название, Дата_получения, Произведено_деталей From Ремонтники
Join Детали On Ремонтники.Ремонтник_ID = Детали.Деталь_ID
Where Разряд In (3, 4, 5)
*/

/*------------------------------------------------------------------------
Создание представлений, хранимых процедур, функций, триггеров и транзакций
------------------------------------------------------------------------*/

--Представления

--1)
/*
Create View Общая_стоимость_деталей_на_станке As
Select Станки.Название, Sum(Количество_на_станке) As Деталей_на_станке, Sum(Цена) As Цена From Станки
Join Списки_деталей On Станки.Станок_ID = Списки_деталей.Станок_ID
Join Детали On Списки_деталей.Деталь_ID = Детали.Деталь_ID
Group By Станки.Название
*/

--Select * From Общая_стоимость_деталей_на_станке

--2)
/*
Create View Станки_и_их_типы As
Select Название, Тип From Станки
Join Типы_станков On Станки.Тип_станка_ID = Типы_станков.Тип_станка_ID
*/

--Select * From Станки_и_их_типы

--Хранимые процедуры

--1) Минимальная и максимальная цены за детали
/*
Create Procedure Крайние_значения_цены @min money output, @max money output As
Select @min = MIN(Цена), @max = MAX(Цена) From Детали
*/

/*
Declare @min money, @max money
Exec Крайние_значения_цены @min output, @max output
Print 'Минимальная цена ' + Convert(varchar, @min)
Print 'Максимальная цена ' + Convert(varchar, @max)
*/

--2) Упрощенное добавление склада
/*
Create Procedure Добавление_склада @Номер_склада int, @Адрес varchar(30), @Площадь int As
Insert Into Склады(Номер_склада, Адрес, Площадь) Values (@Номер_склада, @Адрес, @Площадь)
*/

/*
Declare @Номер_склада int, @Адрес varchar(30), @Площадь int
Set @Номер_склада = 401
Set @Адрес = 'ул. Демидова, 6'
Set @Площадь = 25
Exec Добавление_склада @Номер_склада, @Адрес, @Площадь
Select * From Склады
*/

--Функции

--1) Вывод детали по подстроке в названии
/*
Create Function Вывод_детали_по_подстроке_в_названии(@substring varchar(30))
Returns Table As
Return Select * From Детали	Where Название Like '%' + @substring + '%'
*/

/*
Declare @substring varchar(30)
Select * From Вывод_детали_по_подстроке_в_названии('оси')
*/

--2) Вывод ремонтников с зарплатой от одногой значения до другого
/*
Create Function Ремонтники_с_зарплатой_между(@Нижняя_зарплата money, @Верхняя_зарплата money)
Returns Table As
Return Select * From Ремонтники Where Зарплата Between @Нижняя_зарплата And @Верхняя_зарплата
*/

/*
Declare @Нижняя_зарплата money, @Верхняя_зарплата money
Select * From Ремонтники_с_зарплатой_между(20000, 30000)
*/

--Транзакции

/*
Begin Transaction
Insert Into Склады(Номер_склада, Адрес, Площадь) Values (402, '402', 402)
Save Transaction a

Insert Into Склады(Номер_склада, Адрес, Площадь) Values (403, '403', 403)
Save Transaction a

Rollback Transaction a
*/

--Авторизация

--Create Login "User" With Password = 'Password'
--Create User "User" For Login "User"

